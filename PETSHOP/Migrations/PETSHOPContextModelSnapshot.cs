// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PETSHOP.Models;

namespace PETSHOP.Migrations
{
    [DbContext(typeof(PETSHOPContext))]
    partial class PETSHOPContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PETSHOP.Models.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Account_ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountPassword")
                        .IsRequired()
                        .HasColumnName("Account_Password")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<int?>("AccountRoleId")
                        .HasColumnName("AccountRole_ID")
                        .HasColumnType("int");

                    b.Property<string>("AccountUserName")
                        .IsRequired()
                        .HasColumnName("Account_UserName")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("JWToken")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AccountId");

                    b.HasIndex("AccountRoleId");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("PETSHOP.Models.AccountRole", b =>
                {
                    b.Property<int>("AccountRoleId")
                        .HasColumnName("AccountRole_ID")
                        .HasColumnType("int");

                    b.Property<bool?>("AccountRoleDelete")
                        .HasColumnName("AccountRole_Delete")
                        .HasColumnType("bit");

                    b.Property<bool?>("AccountRoleInsert")
                        .HasColumnName("AccountRole_Insert")
                        .HasColumnType("bit");

                    b.Property<string>("AccountRoleName")
                        .HasColumnName("AccountRole_Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("AccountRoleReadApi")
                        .HasColumnName("AccountRole_ReadAPI")
                        .HasColumnType("bit");

                    b.Property<bool?>("AccountRoleUpdate")
                        .HasColumnName("AccountRole_Update")
                        .HasColumnType("bit");

                    b.HasKey("AccountRoleId");

                    b.ToTable("AccountRole");
                });

            modelBuilder.Entity("PETSHOP.Models.Bill", b =>
                {
                    b.Property<int>("BillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Bill_ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateOfDelivered")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateOfPurchase")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsDelivery")
                        .HasColumnType("bit");

                    b.Property<int?>("PaymentMethodTypeId")
                        .HasColumnName("PaymentMethodType_ID")
                        .HasColumnType("int");

                    b.Property<double?>("TotalPrice")
                        .HasColumnType("float");

                    b.Property<int>("UserProfileId")
                        .HasColumnName("UserProfile_ID")
                        .HasColumnType("int");

                    b.HasKey("BillId");

                    b.HasIndex("PaymentMethodTypeId");

                    b.ToTable("Bill");
                });

            modelBuilder.Entity("PETSHOP.Models.BillDetail", b =>
                {
                    b.Property<int>("BillDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("BillDetail_ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BillId")
                        .HasColumnName("Bill_ID")
                        .HasColumnType("int");

                    b.Property<int?>("ProductAmount")
                        .HasColumnName("Product_Amount")
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .HasColumnName("Product_ID")
                        .HasColumnType("int");

                    b.Property<double?>("ProductPriceCurrent")
                        .HasColumnName("Product_PriceCurrent")
                        .HasColumnType("float");

                    b.Property<double?>("ProductTotalPrice")
                        .HasColumnName("Product_TotalPrice")
                        .HasColumnType("float");

                    b.HasKey("BillDetailId");

                    b.HasIndex("BillId");

                    b.HasIndex("ProductId");

                    b.ToTable("BillDetail");
                });

            modelBuilder.Entity("PETSHOP.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .HasColumnName("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("CategoryId");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("PETSHOP.Models.CostumeProduct", b =>
                {
                    b.Property<int>("CostumeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CostumeID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CostumeAmountSize")
                        .HasColumnType("int");

                    b.Property<string>("CostumeSize")
                        .HasColumnType("varchar(3)")
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<int?>("ProductId")
                        .HasColumnName("ProductID")
                        .HasColumnType("int");

                    b.HasKey("CostumeId");

                    b.HasIndex("ProductId");

                    b.ToTable("CostumeProduct");
                });

            modelBuilder.Entity("PETSHOP.Models.CustomerType", b =>
                {
                    b.Property<int>("CustomerTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CustomerType_ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CustomerTypeName")
                        .HasColumnName("CustomerType_Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("CustomerTypeScore")
                        .HasColumnName("CustomerType_Score")
                        .HasColumnType("int");

                    b.HasKey("CustomerTypeId");

                    b.ToTable("CustomerType");
                });

            modelBuilder.Entity("PETSHOP.Models.DeliveryProduct", b =>
                {
                    b.Property<int>("DeliveryProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DeliveryProduct_ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DeliveryProductAddress")
                        .HasColumnName("DeliveryProduct_Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DeliveryProductBillId")
                        .HasColumnName("DeliveryProduct_Bill_ID")
                        .HasColumnType("int");

                    b.Property<string>("DeliveryProductNote")
                        .HasColumnName("DeliveryProduct_Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeliveryProductPhoneNumber")
                        .HasColumnName("DeliveryProduct_PhoneNumber")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<int?>("DeliveryProductStateId")
                        .HasColumnName("DeliveryProductState_ID")
                        .HasColumnType("int");

                    b.Property<int?>("DeliveryProductTypeId")
                        .HasColumnName("DeliveryProductType_ID")
                        .HasColumnType("int");

                    b.HasKey("DeliveryProductId");

                    b.HasIndex("DeliveryProductBillId");

                    b.HasIndex("DeliveryProductStateId");

                    b.HasIndex("DeliveryProductTypeId");

                    b.ToTable("DeliveryProduct");
                });

            modelBuilder.Entity("PETSHOP.Models.DeliveryProductState", b =>
                {
                    b.Property<int>("DeliveryProductStateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DeliveryProductState_ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DeliveryProductStateName")
                        .HasColumnName("DeliveryProductState_Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("DeliveryProductStateId");

                    b.ToTable("DeliveryProduct_State");
                });

            modelBuilder.Entity("PETSHOP.Models.DeliveryProductType", b =>
                {
                    b.Property<int>("DeliveryProductTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DeliveryProductType_ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DeliveryProductTypeName")
                        .HasColumnName("DeliveryProductType_Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<double?>("DeliveryProductTypePrice")
                        .HasColumnName("DeliveryProductType_Price")
                        .HasColumnType("float");

                    b.HasKey("DeliveryProductTypeId");

                    b.ToTable("DeliveryProductType");
                });

            modelBuilder.Entity("PETSHOP.Models.Distributor", b =>
                {
                    b.Property<int>("DistributorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Distributor_ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DistributorAddress")
                        .HasColumnName("Distributor_Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DistributorName")
                        .IsRequired()
                        .HasColumnName("Distributor_Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("DistributorPhoneNumber")
                        .HasColumnName("Distributor_PhoneNumber")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("DistributorId");

                    b.ToTable("Distributor");
                });

            modelBuilder.Entity("PETSHOP.Models.FoodProduct", b =>
                {
                    b.Property<int>("FoodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("FoodID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FoodAmount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FoodExpiredDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ProductId")
                        .HasColumnName("ProductID")
                        .HasColumnType("int");

                    b.HasKey("FoodId");

                    b.HasIndex("ProductId");

                    b.ToTable("FoodProduct");
                });

            modelBuilder.Entity("PETSHOP.Models.InventoryReceivingNote", b =>
                {
                    b.Property<int>("InventoryReceivingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("InventoryReceiving_ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("InventoryReceivingDateReceiving")
                        .HasColumnName("InventoryReceiving_DateReceiving")
                        .HasColumnType("datetime");

                    b.Property<double?>("InventoryReceivingTotalPrice")
                        .HasColumnName("InventoryReceiving_TotalPrice")
                        .HasColumnType("float");

                    b.HasKey("InventoryReceivingId")
                        .HasName("PK__Inventor__1A7F13692EEEF348");

                    b.ToTable("InventoryReceivingNote");
                });

            modelBuilder.Entity("PETSHOP.Models.InventoryReceivingNoteDetailForCostume", b =>
                {
                    b.Property<int>("InventoryReceivingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("InventoryReceiving_ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CostumeProductAmount")
                        .HasColumnName("CostumeProduct_Amount")
                        .HasColumnType("int");

                    b.Property<int?>("CostumeProductId")
                        .HasColumnName("CostumeProduct_ID")
                        .HasColumnType("int");

                    b.Property<string>("CostumeProductSize")
                        .HasColumnName("CostumeProduct_Size")
                        .HasColumnType("varchar(3)")
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.HasKey("InventoryReceivingId");

                    b.ToTable("InventoryReceivingNoteDetail_ForCostume");
                });

            modelBuilder.Entity("PETSHOP.Models.InventoryReceivingNoteDetailForFood", b =>
                {
                    b.Property<int>("InventoryReceivingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("InventoryReceiving_ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FoodProductAmount")
                        .HasColumnName("FoodProduct_Amount")
                        .HasColumnType("int");

                    b.Property<int?>("FoodProductId")
                        .HasColumnName("FoodProduct_ID")
                        .HasColumnType("int");

                    b.HasKey("InventoryReceivingId");

                    b.ToTable("InventoryReceivingNoteDetail_ForFood");
                });

            modelBuilder.Entity("PETSHOP.Models.InventoryReceivingNoteDetailForToy", b =>
                {
                    b.Property<int>("InventoryReceivingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("InventoryReceiving_ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ToyProductAmount")
                        .HasColumnName("ToyProduct_Amount")
                        .HasColumnType("int");

                    b.Property<int?>("ToyProductId")
                        .HasColumnName("ToyProduct_ID")
                        .HasColumnType("int");

                    b.HasKey("InventoryReceivingId");

                    b.ToTable("InventoryReceivingNoteDetail_ForToy");
                });

            modelBuilder.Entity("PETSHOP.Models.PaymentMethodType", b =>
                {
                    b.Property<int>("PaymentMethodTypeId")
                        .HasColumnName("PaymentMethodType_ID")
                        .HasColumnType("int");

                    b.Property<string>("PaymentMethodTypeName")
                        .HasColumnName("PaymentMethodType_Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("PaymentMethodTypeId");

                    b.ToTable("PaymentMethodType");
                });

            modelBuilder.Entity("PETSHOP.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ProductID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnName("CategoryID")
                        .HasColumnType("int");

                    b.Property<int>("DistributorId")
                        .HasColumnName("Distributor_ID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("InitAt")
                        .HasColumnName("Init_At")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActivated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ProductDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ProductDiscount")
                        .HasColumnType("float");

                    b.Property<string>("ProductImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<double>("ProductPrice")
                        .HasColumnType("float");

                    b.Property<string>("SlugName")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("DistributorId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("PETSHOP.Models.ToyProduct", b =>
                {
                    b.Property<int>("ToyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ToyID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ProductId")
                        .HasColumnName("ProductID")
                        .HasColumnType("int");

                    b.Property<int?>("ToyAmount")
                        .HasColumnType("int");

                    b.HasKey("ToyId");

                    b.HasIndex("ProductId");

                    b.ToTable("ToyProduct");
                });

            modelBuilder.Entity("PETSHOP.Models.UserComment", b =>
                {
                    b.Property<int>("UserCommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UserComment_ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProductId")
                        .HasColumnName("Product_ID")
                        .HasColumnType("int");

                    b.Property<int?>("Score")
                        .HasColumnType("int");

                    b.Property<bool?>("UserCommentApproved")
                        .HasColumnName("UserComment_Approved")
                        .HasColumnType("bit");

                    b.Property<string>("UserCommentContent")
                        .HasColumnName("UserComment_Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UserCommentPostedDate")
                        .HasColumnName("UserComment_PostedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("UserProfileId")
                        .HasColumnName("UserProfile_ID")
                        .HasColumnType("int");

                    b.HasKey("UserCommentId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserProfileId");

                    b.ToTable("UserComment");
                });

            modelBuilder.Entity("PETSHOP.Models.UserProfile", b =>
                {
                    b.Property<int>("UserProfileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UserProfile_ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountId")
                        .HasColumnName("Account_ID")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerTypeId")
                        .HasColumnName("CustomerType_ID")
                        .HasColumnType("int");

                    b.Property<string>("UserProfileAddress")
                        .HasColumnName("UserProfile_Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserProfileAvatar")
                        .HasColumnName("UserProfile_Avatar")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("UserProfileDob")
                        .HasColumnName("UserProfile_DOB")
                        .HasColumnType("date");

                    b.Property<string>("UserProfileEmail")
                        .HasColumnName("UserProfile_Email")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("UserProfileFirstName")
                        .HasColumnName("UserProfile_FirstName")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("UserProfileIdentityCard")
                        .HasColumnName("UserProfile_IdentityCard")
                        .HasColumnType("varchar(12)")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<string>("UserProfileLastName")
                        .HasColumnName("UserProfile_LastName")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("UserProfileMiddleName")
                        .HasColumnName("UserProfile_MiddleName")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("UserProfilePhoneNumber")
                        .HasColumnName("UserProfile_PhoneNumber")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("UserProfileId");

                    b.HasIndex("AccountId");

                    b.HasIndex("CustomerTypeId");

                    b.ToTable("UserProfile");
                });

            modelBuilder.Entity("PETSHOP.Models.UserScore", b =>
                {
                    b.Property<int>("UserScoreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UserScore_ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("UserCurrentScore")
                        .HasColumnName("User_CurrentScore")
                        .HasColumnType("int");

                    b.Property<int?>("UserProfileId")
                        .HasColumnName("UserProfile_ID")
                        .HasColumnType("int");

                    b.HasKey("UserScoreId");

                    b.HasIndex("UserProfileId");

                    b.ToTable("UserScore");
                });

            modelBuilder.Entity("PETSHOP.Models.Account", b =>
                {
                    b.HasOne("PETSHOP.Models.AccountRole", "AccountRole")
                        .WithMany("Account")
                        .HasForeignKey("AccountRoleId")
                        .HasConstraintName("FK_Account_AccountRole");
                });

            modelBuilder.Entity("PETSHOP.Models.Bill", b =>
                {
                    b.HasOne("PETSHOP.Models.PaymentMethodType", "PaymentMethodType")
                        .WithMany("Bill")
                        .HasForeignKey("PaymentMethodTypeId")
                        .HasConstraintName("FK_Bill_PaymentMethodType");
                });

            modelBuilder.Entity("PETSHOP.Models.BillDetail", b =>
                {
                    b.HasOne("PETSHOP.Models.Bill", "Bill")
                        .WithMany("BillDetail")
                        .HasForeignKey("BillId")
                        .HasConstraintName("FK_BillDetail_Bill");

                    b.HasOne("PETSHOP.Models.Product", "Product")
                        .WithMany("BillDetail")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_BillDetail_Product");
                });

            modelBuilder.Entity("PETSHOP.Models.CostumeProduct", b =>
                {
                    b.HasOne("PETSHOP.Models.Product", "Product")
                        .WithMany("CostumeProduct")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_CostumeProduct_Product");
                });

            modelBuilder.Entity("PETSHOP.Models.DeliveryProduct", b =>
                {
                    b.HasOne("PETSHOP.Models.Bill", "DeliveryProductBill")
                        .WithMany("DeliveryProduct")
                        .HasForeignKey("DeliveryProductBillId")
                        .HasConstraintName("FK_DeliveryProduct_Bill");

                    b.HasOne("PETSHOP.Models.DeliveryProductState", "DeliveryProductState")
                        .WithMany("DeliveryProduct")
                        .HasForeignKey("DeliveryProductStateId")
                        .HasConstraintName("FK_DeliveryProduct_DeliveryProduct_State");

                    b.HasOne("PETSHOP.Models.DeliveryProductType", "DeliveryProductType")
                        .WithMany("DeliveryProduct")
                        .HasForeignKey("DeliveryProductTypeId")
                        .HasConstraintName("FK_DeliveryProduct_DeliveryProductType");
                });

            modelBuilder.Entity("PETSHOP.Models.FoodProduct", b =>
                {
                    b.HasOne("PETSHOP.Models.Product", "Product")
                        .WithMany("FoodProduct")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_FoodProduct_Product");
                });

            modelBuilder.Entity("PETSHOP.Models.InventoryReceivingNote", b =>
                {
                    b.HasOne("PETSHOP.Models.InventoryReceivingNoteDetailForCostume", "InventoryReceiving")
                        .WithOne("InventoryReceivingNote")
                        .HasForeignKey("PETSHOP.Models.InventoryReceivingNote", "InventoryReceivingId")
                        .HasConstraintName("FK_InventoryReceivingNote_InventoryReceivingNoteDetail_ForCostume")
                        .IsRequired();

                    b.HasOne("PETSHOP.Models.InventoryReceivingNoteDetailForFood", "InventoryReceivingNavigation")
                        .WithOne("InventoryReceivingNote")
                        .HasForeignKey("PETSHOP.Models.InventoryReceivingNote", "InventoryReceivingId")
                        .HasConstraintName("FK_InventoryReceivingNote_InventoryReceivingNoteDetail_ForFood")
                        .IsRequired();
                });

            modelBuilder.Entity("PETSHOP.Models.InventoryReceivingNoteDetailForToy", b =>
                {
                    b.HasOne("PETSHOP.Models.InventoryReceivingNote", "InventoryReceiving")
                        .WithOne("InventoryReceivingNoteDetailForToy")
                        .HasForeignKey("PETSHOP.Models.InventoryReceivingNoteDetailForToy", "InventoryReceivingId")
                        .HasConstraintName("FK_InventoryReceivingNoteDetail_ForToy_InventoryReceivingNote")
                        .IsRequired();
                });

            modelBuilder.Entity("PETSHOP.Models.Product", b =>
                {
                    b.HasOne("PETSHOP.Models.Category", "Category")
                        .WithMany("Product")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK_Product_Category")
                        .IsRequired();

                    b.HasOne("PETSHOP.Models.Distributor", "Distributor")
                        .WithMany("Product")
                        .HasForeignKey("DistributorId")
                        .HasConstraintName("FK_Product_Distributor")
                        .IsRequired();
                });

            modelBuilder.Entity("PETSHOP.Models.ToyProduct", b =>
                {
                    b.HasOne("PETSHOP.Models.Product", "Product")
                        .WithMany("ToyProduct")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_ToyProduct_Product");
                });

            modelBuilder.Entity("PETSHOP.Models.UserComment", b =>
                {
                    b.HasOne("PETSHOP.Models.Product", "Product")
                        .WithMany("UserComment")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_UserComment_Product")
                        .IsRequired();

                    b.HasOne("PETSHOP.Models.UserProfile", "UserProfile")
                        .WithMany("UserComment")
                        .HasForeignKey("UserProfileId")
                        .HasConstraintName("FK_UserComment_UserProfile")
                        .IsRequired();
                });

            modelBuilder.Entity("PETSHOP.Models.UserProfile", b =>
                {
                    b.HasOne("PETSHOP.Models.Account", "Account")
                        .WithMany("UserProfile")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK_UserProfile_Account");

                    b.HasOne("PETSHOP.Models.CustomerType", "CustomerType")
                        .WithMany("UserProfile")
                        .HasForeignKey("CustomerTypeId")
                        .HasConstraintName("FK_UserProfile_CustomerType");
                });

            modelBuilder.Entity("PETSHOP.Models.UserScore", b =>
                {
                    b.HasOne("PETSHOP.Models.UserProfile", "UserProfile")
                        .WithMany("UserScore")
                        .HasForeignKey("UserProfileId")
                        .HasConstraintName("FK_UserScore_UserProfile");
                });
#pragma warning restore 612, 618
        }
    }
}
